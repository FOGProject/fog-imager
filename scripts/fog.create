#!/bin/bash

### BEGIN VARIABLES
shareDir="/images" # Remote share dir
jobName="tmpJob" #
destDir="${shareDir}/${jobName}"
### END VARIABLES

### BEGIN FUNCTIONS
function initDest() {
	if [ -d $destDir ]; then
		echo -e "\nWARNING! Destination directory $destDir exists!"
		echo "Drive(s) will not be copied!"
		exit 1
	else
		mkdir -p $destDir
	fi
}

function getDiskList() {
	local rval=`lsblk -dpno KNAME,MAJ:MIN -x KNAME | awk -F'[ :]+' '{
	if ($2 == "3" || $2 == "8" || $2 == "9")
		print $1
	}'`

	return $rval
}

# Gets partition table type
# $1: Disk to scan
# Outputs type of table
function getTableType() {
	local target=$1
	local rval=""

	local gdiskl=`gdisk -l $1`
	local mbrType=`echo $gdiskl | awk '/^\ *MBR:/{print $2}'`
#	local bsdType=`echo $gdiskl | awk '/^\ *BSD:/{print $2}'`
#	local apmType=`echo $gdiskl | awk '/^\ *APM:/{print $2}'`
	local gptType=`echo $gdiskl | awk '/^\ *GPT:/{print $2}'`

	if [ "$gptType" == "present" ]; then
		rval="gpt"
	elif [ "$mbrType" == "present" ]; then
		rval="mbr"
	fi

	return $rval
}

function saveEBR() {
	# TODO - Save partition EBR
}

function savePartions() {
	# TODO - If partition is extended, save EBR
	# TODO - Else, use partclone
}

function processMbrDisk() {
	# Save MBR manually
	dd if=${disk} of=${destDir}/${disk##*/}.mbr.bin bs=512 count=1
	# TODO - Save slack space between partition table and first partition?
}

function processGptDisk() {
	# TODO - Check partition table for errors
	# Save partition table
	sgdisk -b ${destDir}/${disk##*/}.gpt.bin $disk
	# TODO - Save slack space between partition table and first partition?
}
### END FUNCTIONS

initDest

# Get all disks
diskList=`getDiskList`

for disk in ${diskList}; do
	echo -e "Processing $disk"
	# Get partition table type
	tableType=getTableType $disk

	if [ "$tableType" == "mbr" ]; then
		processMbrDisk
	elif [ "$tableType" == "gpt" ]; then
		processGptDisk
	fi

	# TODO - For each partition on disk
		# TODO - Save partition
done
